/* automatically generated by rust-bindgen */


#![allow(dead_code, non_snake_case, non_camel_case_types, non_upper_case_globals)]


#[repr(C)]
#[derive(Copy)]
pub union ShouldNotDerivePartialEq {
    pub a: ::std::os::raw::c_char,
    pub b: ::std::os::raw::c_int,
    _bindgen_union_align: u32,
}
#[test]
fn bindgen_test_layout_ShouldNotDerivePartialEq() {
    assert_eq!(
        ::std::mem::size_of::<ShouldNotDerivePartialEq>(),
        4usize,
        concat!("Size of: ", stringify!(ShouldNotDerivePartialEq))
    );
    assert_eq!(
        ::std::mem::align_of::<ShouldNotDerivePartialEq>(),
        4usize,
        concat!("Alignment of ", stringify!(ShouldNotDerivePartialEq))
    );
    assert_eq!(
        unsafe { &(*(0 as *const ShouldNotDerivePartialEq)).a as *const _ as usize },
        0usize,
        concat!(
            "Alignment of field: ",
            stringify!(ShouldNotDerivePartialEq),
            "::",
            stringify!(a)
        )
    );
    assert_eq!(
        unsafe { &(*(0 as *const ShouldNotDerivePartialEq)).b as *const _ as usize },
        0usize,
        concat!(
            "Alignment of field: ",
            stringify!(ShouldNotDerivePartialEq),
            "::",
            stringify!(b)
        )
    );
}
impl Clone for ShouldNotDerivePartialEq {
    fn clone(&self) -> Self {
        *self
    }
}
impl Default for ShouldNotDerivePartialEq {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
